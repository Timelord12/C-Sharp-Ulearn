Создайте новый проект в Visual Studio. Выберите в качестве типа проекта Class Library.

В этом проекте создайте два класса, Vector и Geometry, в пространстве имен GeometryTasks.

В классе Vector должно быть два публичных поля, X и Y, типа double.

В классе Geometry должно быть два статических метода: GetLength, который возвращает длину переданного вектора, и Add, который возвращает сумму двух переданных векторов.

Оба класса разместите в одном файле. Вообще-то так обычно делать не стоит, но так удобнее для нашей автоматической проверки выполнения задания.







Продолжаем разработку геометрической библиотеки.

Создайте класс Segment, представляющий отрезок прямой. Концы его отрезков должны задаваться двумя публичными полями: Begin и End типа Vector.

Добавьте метод Geometry.GetLength, вычисляющий длину сегмента, и метод Geometry.IsVectorInSegment(Vector, Segment), проверяющий, что задаваемая вектором точка лежит в отрезке.

Сохраните функциональность предыдущего этапа.






Вы вдруг поняли, что не очень-то удобно писать имя класса Geometry при выполнении любой операции с векторами и сегментами. Однако, отказаться от этого класса вы не можете, потому что за те несколько минут, пока вы сдавали предыдущую задачу, вашу библиотеку скачали и начали использовать в своих проектах тысячи человек.

Поэтому вы решили сохранить этот класс, но добавить методы Vector.GetLength(), Segment.GetLength(), Vector.Add(Vector), Vector.Belongs(Segment) и Segment.Contains(Vector) не вместо, а вместе с соответствующими методами класса Geometry.

Сделайте это! Каждый из этих методов должен вызывать уже существующий метод класса Geometry, чтобы не дублировать код.

Вся функциональность предыдущего этапа должна остаться!






Некто хочет использовать вашу геометрическую библиотеку для рисования. Для этого ему необходимо, чтобы у вашего класса Segment появился цвет. Однако, вам кажется, что втаскивать цвета в чисто геометрическую сущность - плохая идея.

Скачайте проект, установите в нем reference на вашу библиотеку, и после этого сделайте так, чтобы методы GetColor и SetColor появились в вашем классе Segment.

Если цвет не задан, GetColor возвращает Color.Black.